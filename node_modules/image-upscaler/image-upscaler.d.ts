import {
  DimensionOptions,
  ScaleOptions,
  WidthOptions,
} from "./image-upscaler.interface";

declare module "image-upscaler" {
  /**
   * Upscales an image using the specified model and scale.
   *
   * @param {ScaleOptions} options - The options for upscaling the image.
   * @param {Buffer} options.image - The input image buffer.
   * @param {ModelName} options.model - The model to use for upscaling.
   * @param {number} options.scale - The desired scale of the output image.
   * @param {number} [options.timeout=TIMEOUT] - The timeout in milliseconds for the upscaling process.
   * @return {Promise<Buffer>} A promise that resolves with the upscaled image buffer.
   */
  export function upscaleOneImageByScale({
    image,
    model,
    saveImageAs,
    scale,
    timeout,
  }: ScaleOptions): Promise<Buffer>;

  /**
   * Upscales an image using the specified model and dimensions.
   *
   * @param {DimensionOptions} options - The options for upscaling the image.
   * @param {Buffer} options.image - The input image buffer.
   * @param {ModelName} options.model - The model to use for upscaling.
   * @param {number} options.width - The desired width of the output image.
   * @param {number} options.height - The desired height of the output image.
   * @param {number} [options.timeout=TIMEOUT] - The timeout in milliseconds for the upscaling process.
   * @return {Promise<Buffer>} A promise that resolves with the upscaled image buffer.
   */
  export function upscaleOneImageByDimension({
    image,
    model,
    saveImageAs,
    width,
    height,
    timeout,
  }: DimensionOptions): Promise<Buffer>;

  /**
   * Upscales an image using the specified model and width.
   *
   * @param {WidthOptions} options - The options for upscaling the image.
   * @param {Buffer} options.image - The input image buffer.
   * @param {ModelName} options.model - The model to use for upscaling.
   * @param {string} options.width - The desired width of the output image.
   * @param {number} [options.timeout=TIMEOUT] - The timeout in milliseconds for the upscaling process.
   * @return {Promise<Buffer>} A promise that resolves with the upscaled image buffer.
   */
  export function upscaleOneImageByWidth({
    image,
    model,
    saveImageAs,
    width,
    timeout,
  }: WidthOptions): Promise<Buffer>;
}
